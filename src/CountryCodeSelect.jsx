// CountryCodeSelect.jsx
import { useState } from "react";
import { FormControl, InputLabel, MenuItem, Select } from "@mui/material";

const countryCodes = [
  { code: "+1", label: "ðŸ‡ºðŸ‡¸ USA / Canada" },
  { code: "+44", label: "ðŸ‡¬ðŸ‡§ UK" },
  { code: "+33", label: "ðŸ‡«ðŸ‡· France" },
  { code: "+49", label: "ðŸ‡©ðŸ‡ª Germany" },
  { code: "+34", label: "ðŸ‡ªðŸ‡¸ Spain" },
  { code: "+39", label: "ðŸ‡®ðŸ‡¹ Italy" },
  { code: "+57", label: "ðŸ‡¨ðŸ‡´ Colombia" },
  { code: "+55", label: "ðŸ‡§ðŸ‡· Brazil" },
  { code: "+52", label: "ðŸ‡²ðŸ‡½ Mexico" },
  { code: "+81", label: "ðŸ‡¯ðŸ‡µ Japan" },
  { code: "+86", label: "ðŸ‡¨ðŸ‡³ China" },
  { code: "+91", label: "ðŸ‡®ðŸ‡³ India" },
  { code: "+61", label: "ðŸ‡¦ðŸ‡º Australia" },
  { code: "+64", label: "ðŸ‡³ðŸ‡¿ New Zealand" },
  { code: "+27", label: "ðŸ‡¿ðŸ‡¦ South Africa" },
  { code: "+82", label: "ðŸ‡°ðŸ‡· South Korea" },
  { code: "+7", label: "ðŸ‡·ðŸ‡º Russia" },
  { code: "+46", label: "ðŸ‡¸ðŸ‡ª Sweden" },
  { code: "+31", label: "ðŸ‡³ðŸ‡± Netherlands" },
  { code: "+32", label: "ðŸ‡§ðŸ‡ª Belgium" },
  { code: "+41", label: "ðŸ‡¨ðŸ‡­ Switzerland" },
  { code: "+90", label: "ðŸ‡¹ðŸ‡· Turkey" },
  { code: "+970", label: "ðŸ‡µðŸ‡¸ Palestine" },
  { code: "+972", label: "ðŸ‡®ðŸ‡± Israel" },
  { code: "+966", label: "ðŸ‡¸ðŸ‡¦ Saudi Arabia" },
  { code: "+20", label: "ðŸ‡ªðŸ‡¬ Egypt" },
  { code: "+234", label: "ðŸ‡³ðŸ‡¬ Nigeria" },
  { code: "+254", label: "ðŸ‡°ðŸ‡ª Kenya" },
  { code: "+63", label: "ðŸ‡µðŸ‡­ Philippines" },
  { code: "+62", label: "ðŸ‡®ðŸ‡© Indonesia" },
];

export default function CountryCodeSelect({ value, onChange, sx }) {
  const [selected, setSelected] = useState(value || "+57");

  const handleChange = (event) => {
    setSelected(event.target.value);
    if (onChange) onChange(event.target.value);
  };

  return (
    <FormControl size="small">
      {/* <InputLabel id="country-code-label">Country Code</InputLabel> */}
      <Select
        // labelId="country-code-label"
        value={selected}
        // label="Country Code"
        onChange={handleChange}
        width={"30px"}
        sx={sx}
      >
        {countryCodes.map((c) => (
          <MenuItem key={c.code} value={c.code}>
            {c.label}
          </MenuItem>
        ))}
      </Select>
    </FormControl>
  );
}
